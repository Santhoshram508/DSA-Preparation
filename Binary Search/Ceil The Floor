Problem Link: https://www.geeksforgeeks.org/problems/ceil-the-floor2802/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=ceil-the-floor

Given an unsorted array arr[] of integers and an integer x, find the floor and ceiling of x in arr[].

Floor of x is the largest element which is smaller than or equal to x. Floor of x doesn’t exist if x is smaller than smallest element of arr[].
Ceil of x is the smallest element which is greater than or equal to x. Ceil of x doesn’t exist if x is greater than greatest element of arr[].

Return an array of integers denoting the [floor, ceil]. Return -1 for floor or ceiling if the floor or ceiling is not present.

Examples:

Input: x = 7 , arr[] = [5, 6, 8, 9, 6, 5, 5, 6]
Output: 6, 8
Explanation: Floor of 7 is 6 and ceil of 7 is 8.
Input: x = 10 , arr[] = [5, 6, 8, 8, 6, 5, 5, 6]
Output: 8, -1
Explanation: Floor of 10 is 8 but ceil of 10 is not possible.
Expected Time Complexity: O(n)
Expected Auxiliary Space: O(1)

Constraints :
1 ≤ arr.size ≤ 105
1 ≤ arr[i], x ≤ 106

Code:
public class CeilFloor {
	public static int[] getFloorAndCeil(int x, int[] arr) {
		int[] result = new int[2];
		 result[0] = floor(arr,x);
		 result[1] =ceil(arr,x);
		 
		return result;
        
    }
	
	public static  int ceil(int[] arr, int x) {
		int low =0;
	     int high = arr.length-1;
	     int result =-1;
	     while(low<=high){
	        int mid = low + (high - low) / 2;
	        
	        if (arr[mid] >= x) {
	            result = arr[mid]; 
	            high = mid - 1;
	        } else {
	            low = mid + 1;
	        }
	    }
	     return result; 
	}

	public static int floor(int[] arr,int x) {
		 int low =0;
	     int high = arr.length-1;
	     int result =-1;
	     while(low<=high){
	        int mid = low + (high - low) / 2;
	        
	        if (arr[mid] <= x) {
	            result = arr[mid];  
	            low = mid + 1; 
	        } else {
	            high = mid - 1; 
	        }
	    }
	     return result; 
	}
	public static void main(String[] args) {
		 int x =7;
		 int arr[] = {5, 6, 8, 9, 6, 5, 5, 6};
		 int[] result =  getFloorAndCeil(x,arr);
		 for(int ans:result) {
			 System.out.println(ans +" ");
		 }

	}

}

Another code:
class Solution {
    public int[] getFloorAndCeil(int x, int[] arr) {
           int floor = -1;
        int ceil = -1;
        for (int num : arr) {
            if (num <= x) {
                floor = Math.max(floor, num);
            }
            if (num >= x) {
                ceil = (ceil == -1) ? num : Math.min(ceil, num);
            }
        }
        
        return new int[]{floor, ceil};
    
    }
}




Problem Link:https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/description/
Problem statement
Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value.
If target is not found in the array, return [-1, -1].
You must write an algorithm with O(log n) runtime complexity.
Example 1:
Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]

Example 2:
Input: nums = [5,7,7,8,8,10], target = 6
Output: [-1,-1]

Example 3:
Input: nums = [], target = 0
Output: [-1,-1]
 
Constraints:
0 <= nums.length <= 105
-109 <= nums[i] <= 109
nums is a non-decreasing array.
-109 <= target <= 109

Code:
class Solution {
    public int[] searchRange(int[] nums, int target) {
      int[] result = new int[2];
      result[0] = searchFirstIndex(nums,target);
      result[1] = searchLastIndex(nums,target);

      return result;

    }

    int searchFirstIndex(int[] nums,int target){
      int index = -1;
        int left = 0;
        int right = nums.length - 1;
        while (left <= right) {
            int mid = left + (right - left) / 2;
            if (nums[mid] >= target) {
                right = mid - 1;
            } else {
                left = mid + 1;
            }
            if (nums[mid] == target) index = mid;
        }
        return index;
    }
    int searchLastIndex(int[] nums,int target){
         int index = -1;
        int left = 0;
        int right = nums.length - 1;
        while (left <= right) {
            int mid = left + (right - left) / 2;
            if (nums[mid] <= target) {
                left = mid + 1;
            } else {
                right = mid - 1;
            }
            if (nums[mid] == target) index = mid;
        }
        return index;
    }
}

Another version:
public static int[] searchRange(int[] nums, int target) {
        int[] result = new int[2];
        result[0] = searchFirstIndex(nums, target);
        result[1] = searchLastIndex(nums, target);

        return result;
    }

    public static int searchFirstIndex(int[] nums, int target) {
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == target) {
                return i;
            }
        }
        return -1;
    }

    public static int searchLastIndex(int[] nums, int target) {
        for (int i = nums.length - 1; i >= 0; i--) {
            if (nums[i] == target) {
                return i;
            }
        }
        return -1;
    }


